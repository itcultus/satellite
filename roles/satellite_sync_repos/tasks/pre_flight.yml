---
# satellite_sync_repos/tasks/pre_flight.yml

# Synchronize individual repositories
- name: Find all Red Hat repositories
  redhat.satellite.repository_info:
    username: "{{ satellite_username | default(omit) }}"
    password: "{{ satellite_password | default(omit) }}"
    server_url: "{{ satellite_server_url | default(omit) }}"
    validate_certs: "{{ satellite_validate_certs | default(omit) }}"
    product: "{{ item.0.name }}"
    organization: "{{ item.0.organization | default(satellite_organization) }}"
    name: >
      {{ item.1.name | replace('(', '')  | replace(')', '') +
        (' ' + item.1.releasever | string) if item.1.releasever is defined else ''
      }}
  register: __repo_sets
  loop: "{{ q('ansible.builtin.subelements', satellite_products, 'repository_sets', {'skip_missing': True}) }}"

- name: Find all non-Red Hat repositories
  redhat.satellite.repository_info:
    username: "{{ satellite_username | default(omit) }}"
    password: "{{ satellite_password | default(omit) }}"
    server_url: "{{ satellite_server_url | default(omit) }}"
    validate_certs: "{{ satellite_validate_certs | default(omit) }}"
    product: "{{ item.0.name }}"
    organization: "{{ item.0.organization | default(satellite_organization) }}"
    name: "{{ item.1.name }}"
  register: __repo_custom
  loop: "{{ q('ansible.builtin.subelements', satellite_products, 'repositories', {'skip_missing': True}) | selectattr('url', 'defined') }}"

- name: Filter unsynced Red Hat repositories
  ansible.builtin.set_fact:
    __repo_sets: "{{ __repo_sets.results | default([]) | map(attribute='repository') | selectattr('last_sync', 'none') }}"
    __repos: "{{ __repo_custom.results | default([]) | map(attribute='repository') | selectattr('last_sync', 'none') }}"
